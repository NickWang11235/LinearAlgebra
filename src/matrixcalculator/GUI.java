/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matrixcalculator;

import java.awt.Component;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.*;
import linearalgebra.Fraction;
import linearalgebra.Matrix;

/**
 *
 * @author nickw
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        promptSize = new javax.swing.JFrame();
        editRow = new javax.swing.JTextField();
        editCol = new javax.swing.JTextField();
        promptRow = new javax.swing.JLabel();
        promptCol = new javax.swing.JLabel();
        confirmEdit = new javax.swing.JButton();
        cancelEdit = new javax.swing.JButton();
        matrixEntries = new javax.swing.JFrame();
        entriesPanel = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        matrixEntriesCancel = new javax.swing.JButton();
        matrixEntriesOK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        edit = new javax.swing.JMenu();
        newMatrix = new javax.swing.JMenuItem();
        operations = new javax.swing.JMenu();
        determinant = new javax.swing.JMenuItem();

        promptSize.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        promptSize.setTitle("New Matrix Size");
        promptSize.setAlwaysOnTop(true);

        promptRow.setText("Row");

        promptCol.setText("Column");

        confirmEdit.setText("OK");
        confirmEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmEditActionPerformed(evt);
            }
        });

        cancelEdit.setText("Cancel");
        cancelEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout promptSizeLayout = new javax.swing.GroupLayout(promptSize.getContentPane());
        promptSize.getContentPane().setLayout(promptSizeLayout);
        promptSizeLayout.setHorizontalGroup(
            promptSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(promptSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(promptSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(promptRow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(promptCol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(confirmEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(promptSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(editCol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelEdit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        promptSizeLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelEdit, editCol, editRow, promptCol, promptRow});

        promptSizeLayout.setVerticalGroup(
            promptSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(promptSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(promptSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(promptRow)
                    .addComponent(editRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(promptSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editCol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(promptCol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(promptSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelEdit)
                    .addComponent(confirmEdit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        promptSizeLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {editCol, editRow, promptCol, promptRow});

        matrixEntries.setTitle("Enter Matrix");

        javax.swing.GroupLayout entriesPanelLayout = new javax.swing.GroupLayout(entriesPanel);
        entriesPanel.setLayout(entriesPanelLayout);
        entriesPanelLayout.setHorizontalGroup(
            entriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        entriesPanelLayout.setVerticalGroup(
            entriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 244, Short.MAX_VALUE)
        );

        matrixEntriesCancel.setText("Cancel");
        matrixEntriesCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrixEntriesCancelActionPerformed(evt);
            }
        });
        buttonPanel.add(matrixEntriesCancel);

        matrixEntriesOK.setText("OK");
        matrixEntriesOK.setMaximumSize(new java.awt.Dimension(65, 23));
        matrixEntriesOK.setMinimumSize(new java.awt.Dimension(65, 23));
        matrixEntriesOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrixEntriesOKActionPerformed(evt);
            }
        });
        buttonPanel.add(matrixEntriesOK);

        javax.swing.GroupLayout matrixEntriesLayout = new javax.swing.GroupLayout(matrixEntries.getContentPane());
        matrixEntries.getContentPane().setLayout(matrixEntriesLayout);
        matrixEntriesLayout.setHorizontalGroup(
            matrixEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(entriesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, matrixEntriesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        matrixEntriesLayout.setVerticalGroup(
            matrixEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, matrixEntriesLayout.createSequentialGroup()
                .addComponent(entriesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setType(java.awt.Window.Type.POPUP);

        display.setColumns(20);
        display.setRows(5);
        jScrollPane1.setViewportView(display);

        file.setText("File");
        menuBar.add(file);

        edit.setText("Edit");

        newMatrix.setText("New Matrix");
        newMatrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMatrixActionPerformed(evt);
            }
        });
        edit.add(newMatrix);

        menuBar.add(edit);

        operations.setText("Operations");

        determinant.setText("Determinant");
        determinant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                determinantActionPerformed(evt);
            }
        });
        operations.add(determinant);

        menuBar.add(operations);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(183, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void determinantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_determinantActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_determinantActionPerformed

    private void newMatrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMatrixActionPerformed
        editRow.setText("");
        editCol.setText("");
        promptSize.pack();
        promptSize.setVisible(true);
    }//GEN-LAST:event_newMatrixActionPerformed

    private void cancelEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelEditActionPerformed
        promptSize.dispose();
    }//GEN-LAST:event_cancelEditActionPerformed

    private void confirmEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmEditActionPerformed
        int row = Integer.valueOf(editRow.getText()), col = Integer.valueOf(editCol.getText());
        promptSize.dispose();
        initMatrixEntries(row, col);
    }//GEN-LAST:event_confirmEditActionPerformed

    private void matrixEntriesOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrixEntriesOKActionPerformed
        GridLayout layout = (GridLayout)entriesPanel.getLayout();
        int row = layout.getRows(),
            col = layout.getColumns();
        Fraction[][] matrix = new Fraction[row][col];
        Component[] entries = entriesPanel.getComponents();
        for(int i = 0; i < row; i++)
            for(int j = 0; j < col; j++)
                matrix[i][j] = new Fraction(((JTextField)entries[i*col+j]).getText());
        
        Matrix m = new Matrix(matrix);
        matrices.add(m);
        display.setText(m.toString());
        matrixEntries.dispose();
        
    }//GEN-LAST:event_matrixEntriesOKActionPerformed

    private void matrixEntriesCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrixEntriesCancelActionPerformed
        matrixEntries.dispose();
    }//GEN-LAST:event_matrixEntriesCancelActionPerformed

    private void initMatrixEntries(int row, int col) {
      
        entriesPanel.removeAll();
        JTextField[] entries = new JTextField[row*col];
        GridLayout entriesLayout = new GridLayout(row, col);
        entriesPanel.setLayout(entriesLayout);
        
        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                entries[i*col + j] = new JTextField("");
                entriesPanel.add(entries[i*col + j]);
            }
        }
        
        matrixEntries.pack();
        matrixEntries.setVisible(true);
    }

    private ArrayList<Matrix> matrices = new ArrayList<>();
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        }); 
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelEdit;
    private javax.swing.JButton confirmEdit;
    private javax.swing.JMenuItem determinant;
    private javax.swing.JTextArea display;
    private javax.swing.JMenu edit;
    private javax.swing.JTextField editCol;
    private javax.swing.JTextField editRow;
    private javax.swing.JPanel entriesPanel;
    private javax.swing.JMenu file;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFrame matrixEntries;
    private javax.swing.JButton matrixEntriesCancel;
    private javax.swing.JButton matrixEntriesOK;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newMatrix;
    private javax.swing.JMenu operations;
    private javax.swing.JLabel promptCol;
    private javax.swing.JLabel promptRow;
    private javax.swing.JFrame promptSize;
    // End of variables declaration//GEN-END:variables

}
